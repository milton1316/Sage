{"version":3,"sources":["Cliente.js","Endereco.js","Steps.js","App.js","index.js"],"names":["ListagemCliente","Grid","container","TableContainer","component","Paper","style","height","overflowX","overflowY","Table","stickyHeader","TableHead","TableRow","TableCell","width","TableBody","this","props","clientes","map","cliente","key","id","nome","sobrenome","cpf","IconButton","color","onClick","editar","excluir","bind","spacing","marginTop","item","md","xs","Button","variant","novo","float","Component","FormularioCliente","state","dataNascimento","Date","estadoCivil","endereco","Object","assign","irParaStep","obter","onSubmit","proximo","direction","type","value","ref","input","sm","label","fullWidth","onChange","setState","target","validators","errorMessages","mask","select","defaultValue","MenuItem","utils","DateFnsUtils","DatePicker","margin","autoOk","format","FormularioEndereco","cep","estado","cidade","bairro","logradouro","numero","salvar","Steps","stepAtivo","mensagem","visivel","conteudo","classCss","exclusao","listar","confirmarExclusao","obterCliente","obterEndereco","limparMensagem","$","ajax","url","dataType","success","step","callback","undefined","atualizar","incluir","contentType","data","JSON","stringify","push","error","erro","console","log","i","findIndex","resposta","filter","Container","Collapse","in","Alert","severity","onClose","Stepper","alternativeLabel","activeStep","Step","StepLabel","obterConteudo","Dialog","open","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","App","maxWidth","AppBar","position","Toolbar","Typography","align","flexGrow","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c39bdb3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, MenuItem, Button, IconButton } from '@material-ui/core';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport InputMask from \"react-input-mask\";\r\n\r\nexport class ListagemCliente extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Grid container>\r\n                <TableContainer component={Paper} style={{ height: \"300px\", overflowX: \"hidden\", overflowY: \"auto\" }}>\r\n                    <Table stickyHeader>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Nome</TableCell>\r\n                                <TableCell>Sobrenome</TableCell>\r\n                                <TableCell>CPF</TableCell>\r\n                                <TableCell style={{ width: 100 }}>Ações</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                this.props.clientes.map(function (cliente) {\r\n                                    return (\r\n                                        <TableRow key={cliente.id}>\r\n                                            <TableCell>{cliente.nome}</TableCell>\r\n                                            <TableCell>{cliente.sobrenome}</TableCell>\r\n                                            <TableCell>{cliente.cpf}</TableCell>\r\n                                            <TableCell>\r\n                                                <IconButton color=\"primary\" onClick={() => this.props.editar(cliente)}>\r\n                                                    <EditIcon></EditIcon>\r\n                                                </IconButton>\r\n                                                <IconButton color=\"secondary\" onClick={() => this.props.excluir(cliente.id)}>\r\n                                                    <DeleteIcon></DeleteIcon>\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                }.bind(this))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2} style={{ marginTop: \"20px\" }}>\r\n                    <Grid item md={12} xs={12}>\r\n                        <Button color=\"primary\" variant=\"contained\" onClick={this.props.novo} style={{ float: \"right\" }}>Novo</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport class FormularioCliente extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: props.cliente.id ? props.cliente.id : 0,\r\n            nome: props.cliente.nome ? props.cliente.nome : '',\r\n            sobrenome: props.cliente.sobrenome ? props.cliente.sobrenome : '',\r\n            cpf: props.cliente.cpf ? props.cliente.cpf : '',\r\n            dataNascimento: props.cliente.dataNascimento ? props.cliente.dataNascimento : new Date(),\r\n            estadoCivil: props.cliente.estadoCivil ? props.cliente.estadoCivil : 0,\r\n            endereco: props.cliente.endereco ? props.cliente.endereco : {}\r\n        }\r\n    }\r\n\r\n    proximo() {\r\n        const cliente = Object.assign(this.state);\r\n        this.props.irParaStep(2, this.props.obter(cliente));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ValidatorForm onSubmit={this.proximo.bind(this)}>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item md={12} xs={12}>\r\n                        <Grid container style={{ marginTop: \"20px\" }}>\r\n                            <Grid item md={12}>\r\n                                <input type=\"hidden\" value={this.state.id} ref={(input) => this.id = input} />\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item md={4} sm={12}>\r\n                                        <TextValidator label=\"Nome\" variant=\"outlined\" fullWidth value={this.state.nome}\r\n                                            onChange={(input) => this.setState({ nome: input.target.value })}\r\n                                            validators={['required', 'minStringLength:2']} errorMessages={['Campo obrigatório', 'Deve ter no minimo 2 caracteres']} />\r\n                                    </Grid>\r\n                                    <Grid item md={8} sm={12}>\r\n                                        <TextValidator label=\"Sobrenome\" variant=\"outlined\" fullWidth value={this.state.sobrenome}\r\n                                            onChange={(input) => this.setState({ sobrenome: input.target.value })} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item md={4} sm={12}>\r\n                                        <InputMask mask=\"999.999.999-99\" value={this.state.cpf} onChange={(input) => this.setState({ cpf: input.target.value })}>\r\n                                            <TextValidator label=\"CPF\" variant=\"outlined\" fullWidth validators={['required']} errorMessages={['Campo obrigatório']} />\r\n                                        </InputMask>\r\n                                    </Grid>\r\n                                    <Grid item md={4} sm={12}>\r\n                                        <TextValidator label=\"Estado civil\" variant=\"outlined\" select fullWidth defaultValue={0}\r\n                                            value={this.state.estadoCivil} validators={['minNumber:1']} errorMessages={['Campo obrigatório']}\r\n                                            onChange={(input) => this.setState({ estadoCivil: input.target.value })} >\r\n                                            <MenuItem key={0} value={0}>Selecione</MenuItem>\r\n                                            <MenuItem key={1} value={1}>Solteiro</MenuItem>\r\n                                            <MenuItem key={2} value={2}>Casado</MenuItem>\r\n                                        </TextValidator>\r\n                                    </Grid>\r\n                                    <Grid item md={4} sm={12}>\r\n                                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                            <DatePicker variant=\"outlined\" margin=\"dense\" autoOk format=\"dd/MM/yyyy\" label=\"Data de nascimento\" fullWidth value={this.state.dataNascimento} onChange={(input) => this.setState({ dataNascimento: input })} />\r\n                                        </MuiPickersUtilsProvider>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item md={12} xs={12} style={{ marginTop: \"20px\" }}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item md={6}>\r\n                                <Button color=\"primary\" variant=\"contained\" onClick={() => this.props.irParaStep(0)}>Anterior</Button>\r\n                            </Grid>\r\n                            <Grid item md={6}>\r\n                                <Button type=\"submit\" color=\"primary\" variant=\"contained\" style={{ float: \"right\" }}>Próximo</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </ValidatorForm>\r\n\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Grid, MenuItem, Button } from '@material-ui/core';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport InputMask from \"react-input-mask\";\r\n\r\nexport class FormularioEndereco extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: props.endereco.id ? props.endereco.id : 0,\r\n            cep: props.endereco.cep ? props.endereco.cep : '',\r\n            estado: props.endereco.estado ? props.endereco.estado : 0,\r\n            cidade: props.endereco.cidade ? props.endereco.cidade : '',\r\n            bairro: props.endereco.bairro ? props.endereco.bairro : '',\r\n            logradouro: props.endereco.logradouro ? props.endereco.logradouro : '',\r\n            numero: props.endereco.numero ? props.endereco.numero : ''\r\n        }\r\n    }\r\n\r\n    salvar() {\r\n        const endereco = Object.assign(this.state);\r\n        this.props.obter(endereco);\r\n        this.props.salvar();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ValidatorForm onSubmit={this.salvar.bind(this)}>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item md={12} xs={12}>\r\n                        <Grid container style={{ marginTop: \"20px\" }}>\r\n                            <Grid item md={12}>\r\n                                <input type=\"hidden\" value={this.state.id} ref={(input) => this.id = input} />\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item md={3} sm={12}>\r\n                                        <InputMask mask=\"99999-999\" value={this.state.cep} onChange={(input) => this.setState({ cep: input.target.value })}>\r\n                                            <TextValidator label=\"CEP\" variant=\"outlined\" fullWidth validators={['required']} errorMessages={['Campo obrigatório']} />\r\n                                        </InputMask>\r\n                                    </Grid>\r\n                                    <Grid item md={3} sm={12}>\r\n                                        <TextValidator label=\"Estado\" variant=\"outlined\" select fullWidth value={this.state.estado}\r\n                                            onChange={(input) => this.setState({ estado: input.target.value })}\r\n                                            validators={['minNumber:1']} errorMessages={['Campo obrigatório']}>\r\n                                            <MenuItem key={0} value={0}>Selecione</MenuItem >\r\n                                            <MenuItem key={1} value={1}>São Paulo</MenuItem >\r\n                                            <MenuItem key={2} value={2}>Rio de Janeiro</MenuItem >\r\n                                        </TextValidator>\r\n                                    </Grid>\r\n                                    <Grid item md={3} sm={12}>\r\n                                        <TextValidator label=\"Cidade\" variant=\"outlined\" fullWidth value={this.state.cidade}\r\n                                            onChange={(input) => this.setState({ cidade: input.target.value })}\r\n                                            validators={['required', 'minStringLength:2']} errorMessages={['Campo obrigatório', 'Deve ter no minimo 2 caracteres']} />\r\n                                    </Grid>\r\n                                    <Grid item md={3} sm={12}>\r\n                                        <TextValidator label=\"Bairro\" variant=\"outlined\" fullWidth value={this.state.bairro}\r\n                                            onChange={(input) => this.setState({ bairro: input.target.value })}\r\n                                            validators={['required', 'minStringLength:2']} errorMessages={['Campo obrigatório', 'Deve ter no minimo 2 caracteres']} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item md={10} sm={12}>\r\n                                        <TextValidator label=\"Logradouro\" variant=\"outlined\" fullWidth value={this.state.logradouro}\r\n                                            onChange={(input) => this.setState({ logradouro: input.target.value })}\r\n                                            validators={['required', 'minStringLength:2']} errorMessages={['Campo obrigatório', 'Deve ter no minimo 2 caracteres']} />\r\n                                    </Grid>\r\n                                    <Grid item md={2} sm={12}>\r\n                                        <TextValidator label=\"Numero\" variant=\"outlined\" fullWidth value={this.state.numero}\r\n                                            onChange={(input) => this.setState({ numero: input.target.value })} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item md={12} style={{ marginTop: \"20px\" }}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item md={6}>\r\n                                <Button color=\"primary\" variant=\"contained\" onClick={() => this.props.irParaStep(1)}>Anterior</Button>\r\n                            </Grid>\r\n                            <Grid item md={6}>\r\n                                <Button type=\"submit\" color=\"primary\" variant=\"contained\" style={{ float: \"right\" }}>Salvar</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </ValidatorForm>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Stepper, Step, StepLabel, Collapse, Button } from \"@material-ui/core\";\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from \"@material-ui/core\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport $ from \"jquery\";\r\nimport { ListagemCliente, FormularioCliente } from './Cliente';\r\nimport { FormularioEndereco } from './Endereco';\r\n\r\nexport default class Steps extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            stepAtivo: 0,\r\n            clientes: [],\r\n            mensagem: {\r\n                visivel: false,\r\n                conteudo: '',\r\n                classCss: 'info'\r\n            },\r\n            exclusao: false\r\n        };\r\n\r\n        this.cliente = {};\r\n        this.novo = this.novo.bind(this);\r\n        this.listar = this.listar.bind(this);\r\n        this.editar = this.editar.bind(this);\r\n        this.salvar = this.salvar.bind(this);\r\n        this.excluir = this.excluir.bind(this);\r\n        this.confirmarExclusao = this.confirmarExclusao.bind(this);\r\n        this.obterCliente = this.obterCliente.bind(this);\r\n        this.obterEndereco = this.obterEndereco.bind(this);\r\n        this.limparMensagem = this.limparMensagem.bind(this);\r\n        this.irParaStep = this.irParaStep.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.listar();\r\n    }\r\n\r\n    listar() {\r\n        $.ajax({\r\n            url: \"http://localhost:8000/api/clientes\",\r\n            dataType: \"json\",\r\n            success: function (clientes) {               \r\n                this.setState({ clientes });\r\n            }.bind(this)\r\n        })\r\n    }\r\n\r\n    irParaStep(step, callback) {\r\n        this.setState({ stepAtivo: step });\r\n        if (callback !== undefined)\r\n            callback();\r\n    };\r\n\r\n    limparMensagem() {\r\n        this.setState({\r\n            mensagem: {\r\n                visivel: false,\r\n                conteudo: '',\r\n                classCss: 'info'\r\n            }\r\n        });\r\n    }\r\n\r\n    novo() {\r\n        this.cliente = {};\r\n        this.limparMensagem();\r\n        this.irParaStep(1);\r\n    }\r\n\r\n    editar(cliente) {\r\n        this.cliente = cliente;\r\n        this.limparMensagem();\r\n        this.irParaStep(1);\r\n    }\r\n\r\n    salvar() {\r\n        if (this.cliente.id)\r\n            this.atualizar();\r\n        else\r\n            this.incluir();\r\n    }\r\n\r\n    incluir() {\r\n        $.ajax({\r\n            url: \"http://localhost:8000/api/clientes\",\r\n            contentType: \"application/json\",\r\n            dataType: \"json\",\r\n            type: \"post\",\r\n            data: JSON.stringify(this.cliente),\r\n            success: function (cliente) {\r\n\r\n                const clientes = this.state.clientes;\r\n                clientes.push(cliente);\r\n\r\n                this.setState({\r\n                    clientes,\r\n                    mensagem: {\r\n                        visivel: true,\r\n                        conteudo: 'Cliente cadastrado com sucesso!',\r\n                        classCss: 'success'\r\n                    }\r\n                });\r\n\r\n                this.cliente = {};\r\n                this.irParaStep(0);\r\n\r\n            }.bind(this),\r\n            error: function (erro) {\r\n                console.log(erro);\r\n                this.setState({\r\n                    mensagem: {\r\n                        visivel: true,\r\n                        conteudo: 'Ocorreu erro(s) ao tentar cadastrar um cliente!',\r\n                        classCss: 'error'\r\n                    }\r\n                });\r\n            }.bind(this)\r\n        })\r\n    }\r\n\r\n    atualizar() {\r\n        $.ajax({\r\n            url: \"http://localhost:8000/api/clientes/\" + this.cliente.id,\r\n            contentType: \"application/json\",\r\n            dataType: \"json\",\r\n            type: \"put\",\r\n            data: JSON.stringify(this.cliente),\r\n            success: function (cliente) {\r\n\r\n                const clientes = this.state.clientes;\r\n                const i = clientes.findIndex(item => item.id === cliente.id)\r\n                clientes[i] = cliente;\r\n\r\n                this.setState({\r\n                    clientes,\r\n                    mensagem: {\r\n                        visivel: true,\r\n                        conteudo: 'Cliente alterado com sucesso!',\r\n                        classCss: 'success'\r\n                    }\r\n                });\r\n                this.cliente = {};\r\n                this.irParaStep(0);\r\n\r\n            }.bind(this),\r\n            error: function (erro) {\r\n                console.log(erro);\r\n                this.setState({\r\n                    mensagem: {\r\n                        visivel: true,\r\n                        conteudo: 'Ocorreu erro(s) ao tentar alterar um cliente!',\r\n                        classCss: 'error'\r\n                    }\r\n                });\r\n            }.bind(this)\r\n        })\r\n    }\r\n\r\n    excluir(id) {\r\n        this.cliente.id = id;\r\n        this.setState({ exclusao: true });\r\n    }\r\n\r\n    confirmarExclusao() {\r\n        $.ajax({\r\n            url: \"http://localhost:8000/api/clientes/\" + this.cliente.id,\r\n            contentType: \"application/json\",\r\n            dataType: \"json\",\r\n            type: \"delete\",\r\n            success: function (resposta) {\r\n                if (resposta) {\r\n\r\n                    const clientes = this.state.clientes.filter(function (cliente) {\r\n                        return cliente.id !== this.cliente.id\r\n                    }.bind(this));\r\n\r\n                    this.setState({\r\n                        clientes,\r\n                        mensagem: {\r\n                            visivel: true,\r\n                            conteudo: 'Cliente excluido com sucesso!',\r\n                            classCss: 'success'\r\n                        },\r\n                        exclusao: false\r\n                    });\r\n                }\r\n            }.bind(this),\r\n            error: function (erro) {\r\n                console.log(erro);\r\n                this.setState({\r\n                    mensagem: {\r\n                        visivel: true,\r\n                        conteudo: 'Ocorreu erro(s) ao tentar alterar um cliente!',\r\n                        classCss: 'error'\r\n                    },\r\n                    exclusao: false\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    obterCliente(cliente) {\r\n        this.cliente = cliente;\r\n    }\r\n\r\n    obterEndereco(endereco) {\r\n        if (this.cliente) {\r\n            this.cliente.endereco = endereco;\r\n        }\r\n    }\r\n\r\n    obterConteudo(step) {\r\n        switch (step) {\r\n            case 0:\r\n            default:\r\n                return <ListagemCliente clientes={this.state.clientes} novo={this.novo} editar={this.editar} excluir={this.excluir}></ListagemCliente>\r\n            case 1:\r\n                return <FormularioCliente irParaStep={this.irParaStep} cliente={this.cliente} obter={this.obterCliente}></FormularioCliente>;\r\n            case 2:\r\n                return <FormularioEndereco irParaStep={this.irParaStep} endereco={this.cliente.endereco} obter={this.obterEndereco} salvar={this.salvar}></FormularioEndereco>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Collapse in={this.state.mensagem.visivel} style={{ 'marginTop': '20px' }}>\r\n                    <Alert severity={this.state.mensagem.classCss} onClose={() => this.setState({ mensagem: { visivel: false } })}>\r\n                        {this.state.mensagem.conteudo}\r\n                    </Alert>\r\n                </Collapse>\r\n                <Stepper alternativeLabel activeStep={this.state.stepAtivo}>\r\n                    <Step key={0}>\r\n                        <StepLabel>Listagem</StepLabel>\r\n                    </Step>\r\n                    <Step key={1}>\r\n                        <StepLabel>Clientes</StepLabel>\r\n                    </Step>\r\n                    <Step key={2}>\r\n                        <StepLabel>Endereços</StepLabel>\r\n                    </Step>\r\n                </Stepper>\r\n                {\r\n                    this.obterConteudo(this.state.stepAtivo)\r\n                }\r\n                <Dialog open={this.state.exclusao} onClose={() => this.setState({ exclusao: false })}>\r\n                    <DialogTitle>Deseja excluir o Cliente?</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>Por favor, confirme a exclusão do cliente.</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.confirmarExclusao} color=\"primary\">Confirmar</Button>\r\n                        <Button onClick={() => this.setState({ exclusao: false })} color=\"primary\" autoFocus>Cancelar</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Container>\r\n        );\r\n    }\r\n}","import './App.css';\nimport React from 'react';\nimport { Container, AppBar, Toolbar, Typography } from '@material-ui/core';\nimport StepBox from \"./Steps\";\n\nfunction App() {\n\n  return (\n    <Container maxWidth=\"md\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h5\" align=\"center\" style={{ flexGrow: 1 }} >Cadastro de Clientes</Typography>\n        </Toolbar>\n      </AppBar>\n      <StepBox></StepBox>      \n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}